[{"D:\\JL\\Programming\\React\\Portfolio v2\\jackysportfolio\\src\\index.js":"1","D:\\JL\\Programming\\React\\Portfolio v2\\jackysportfolio\\src\\reportWebVitals.js":"2","D:\\JL\\Programming\\React\\Portfolio v2\\jackysportfolio\\src\\App.js":"3","D:\\JL\\Programming\\React\\Portfolio v2\\jackysportfolio\\src\\components\\Home.js":"4","D:\\JL\\Programming\\React\\Portfolio v2\\jackysportfolio\\src\\components\\Archive.js":"5","D:\\JL\\Programming\\React\\Portfolio v2\\jackysportfolio\\src\\components\\Header.js":"6","D:\\JL\\Programming\\React\\Portfolio v2\\jackysportfolio\\src\\components\\Skills.js":"7","D:\\JL\\Programming\\React\\Portfolio v2\\jackysportfolio\\src\\components\\Resume.js":"8"},{"size":500,"mtime":499162500000,"results":"9","hashOfConfig":"10"},{"size":362,"mtime":499162500000,"results":"11","hashOfConfig":"10"},{"size":759,"mtime":1608290997461,"results":"12","hashOfConfig":"10"},{"size":37665,"mtime":1609744394712,"results":"13","hashOfConfig":"10"},{"size":17040,"mtime":1609732819684,"results":"14","hashOfConfig":"10"},{"size":1891,"mtime":1609739369833,"results":"15","hashOfConfig":"10"},{"size":5375,"mtime":1609745516240,"results":"16","hashOfConfig":"10"},{"size":4907,"mtime":1609726322969,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},"1vynnye",{"filePath":"21","messages":"22","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":22,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"27","messages":"28","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"29","usedDeprecatedRules":"20"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"32","messages":"33","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"34","messages":"35","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"36","usedDeprecatedRules":"20"},"D:\\JL\\Programming\\React\\Portfolio v2\\jackysportfolio\\src\\index.js",[],["37","38"],"D:\\JL\\Programming\\React\\Portfolio v2\\jackysportfolio\\src\\reportWebVitals.js",[],"D:\\JL\\Programming\\React\\Portfolio v2\\jackysportfolio\\src\\App.js",[],"D:\\JL\\Programming\\React\\Portfolio v2\\jackysportfolio\\src\\components\\Home.js",["39","40","41","42","43","44","45","46","47","48","49","50","51","52","53","54","55","56","57","58","59","60"],"D:\\JL\\Programming\\React\\Portfolio v2\\jackysportfolio\\src\\components\\Archive.js",["61"],"import React from \"react\";\r\nimport './Archives.css';\r\nimport GitLogo from './images/gitLogo.png'\r\nimport { Modal, Button } from 'react-bootstrap';\r\nimport NotesToText1 from './images/NotesToText1.PNG'\r\nimport NotesToText2 from './images/NotesToText2.PNG'\r\nimport cverseCommands from './images/cverseCommands.PNG'\r\nimport cversestatsCanada from './images/cversestatsCanada.PNG'\r\nimport cverseReddit from './images/cverseReddit.PNG'\r\nimport cverseNews from './images/cverseNews.PNG'\r\nimport desktopCleaner2 from './images/desktopCleaner2.PNG'\r\nimport BitcoinPrice1 from './images/BitcoinPrice1.PNG'\r\nimport BitcoinPrice2 from './images/BitcoinPrice2.PNG'\r\nimport infoIcon from './images/infoIcon.png'\r\nimport Table from 'react-bootstrap/Table'\r\n\r\nconst Archive = () => {\r\n    const [show2, setshow2] = React.useState(false);\r\n    const handleshow2Close = () => setshow2(false);\r\n    const handleshow2Show = () => setshow2(true);\r\n\r\n    const [show3, setshow3] = React.useState(false);\r\n    const handleshow3Close = () => setshow3(false);\r\n    const handleshow3Show = () => setshow3(true);\r\n\r\n    const [show7, setshow7] = React.useState(false);\r\n    const handleshow7Close = () => setshow7(false);\r\n    const handleshow7Show = () => setshow7(true);\r\n\r\n    const [show8, setshow8] = React.useState(false);\r\n    const handleshow8Close = () => setshow8(false);\r\n    const handleshow8Show = () => setshow8(true);\r\n\r\n    const [show9, setshow9] = React.useState(false);\r\n    const handleshow9Close = () => setshow9(false);\r\n    const handleshow9Show = () => setshow9(true);\r\n\r\n    return (\r\n        <div className=\"archiveBG\">\r\n            <div className=\"archive\">\r\n                <br /><br /><br /> <br />\r\n                <b><p style={{ color: \"#e6f1ff\", fontSize: \"50px\", paddingLeft: \"50px\", marginTop: \"-20px\" }}>Archives</p></b>\r\n                <p style={{ color: \"#e6f1ff\", fontSize: \"20px\", paddingLeft: \"50px\", marginTop: \"-20px\" }}>List of Projects I've worked on</p>\r\n                <br />\r\n                <Table borderless>\r\n                    <thead>\r\n                        <tr>\r\n                            <th scope=\"col\">Year</th>\r\n                            <th scope=\"col\">Title</th>\r\n                            <th scope=\"col\">Built With</th>\r\n                            <th scope=\"col\">Description</th>\r\n                            <th scope=\"col\">GitHub</th>\r\n                            <th scope=\"col\">Info</th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        <tr>\r\n                            <td >2020</td>\r\n                            <td >ChatJS</td>\r\n                            <td width=\"200\">JavaScript, React, SQL, socket.io</td>\r\n                            <td >Frontend and backend for a chatroom web application developed using React. Features a login and registration server. Incorporates Socket.IO in order to implement the functionality that allows communication between users.</td>\r\n                            <td><a href=\"https://github.com/jackyliu1999/ChatJS\"> <img src={GitLogo} alt=\"\" /></a></td>\r\n                            <td><img src={infoIcon} onClick={handleshow9Show} alt=\"\" /></td>\r\n                        </tr>\r\n                        <tr>\r\n                            <td >2020</td>\r\n                            <td >COVID19 Stats Tracker</td>\r\n                            <td >Python</td>\r\n                            <td >Created for Hackathon, BOTHACKS. Incorporates APIs that draw live data including total cases, total recovered and total deaths in order to inform the user of the severity and numbers of the COVID-19 pandemic.</td>\r\n                            <td ><a href=\"https://github.com/jackyliu1999/COVID19-Stats-Tracker\"> <img src={GitLogo} alt=\"\" /></a></td>\r\n                            <td><img src={infoIcon} onClick={handleshow3Show} alt=\"\" /></td>\r\n                        </tr>\r\n                        <tr>\r\n                            <td >2020</td>\r\n                            <td >Notes to Text Converter</td>\r\n                            <td >Python</td>\r\n                            <td >Takes handwritten notes and converts them into text. Incorporates optical character recognition tool, pytesseract for the conversion functionality. Tkinter was utilized in order to provide a user-friendly interface.</td>\r\n                            <td ><a href=\"https://github.com/jackyliu1999/Notes-to-Text-Converter\"> <img src={GitLogo} alt=\"\" /></a></td>\r\n                            <td><img src={infoIcon} onClick={handleshow2Show} alt=\"\" /></td>\r\n                        </tr>\r\n                        <tr>\r\n                            <td >2020</td>\r\n                            <td >Bitcoin Price Notifier</td>\r\n                            <td>Python</td>\r\n                            <td>Notifies users of Bitcoin price fluctuation by extracting the live price of Bitcoin from Yahoo Finance. Allows users to set a benchmark and once the price hits the designated benchmark, verbally notifies user.</td>\r\n                            <td><a href=\"https://github.com/jackyliu1999/Bitcoin-Price-Notifier\"> <img src={GitLogo} alt=\"\" /></a></td>\r\n                            <td><img src={infoIcon} onClick={handleshow8Show} alt=\"\" /></td>\r\n                        </tr>\r\n                        <tr>\r\n                            <td >2020</td>\r\n                            <td>Desktop Cleaner</td>\r\n                            <td>Python</td>\r\n                            <td>Desktop cleaner is a Python-based automation script that sorts folders based on file type (images, documents, spreadsheets, installers, music, videos) into a user inputted directory.</td>\r\n                            <td><a href=\"https://github.com/jackyliu1999/Desktop-Cleaner\"> <img src={GitLogo} alt=\"\" /></a></td>\r\n                            <td><img src={infoIcon} onClick={handleshow7Show} alt=\"\" /></td>\r\n                        </tr>\r\n                    </tbody>\r\n                </Table>\r\n\r\n                <Modal size=\"lg\" show={show2} onHide={handleshow2Close}>\r\n                    <Modal.Header closeButton>\r\n                        <Modal.Title>Notes to Text Converter</Modal.Title>\r\n                    </Modal.Header>\r\n                    <Modal.Body>\r\n                        <b>GitHub: <a href=\"https://github.com/jackyliu1999/Notes-to-Text-Converter\">github.com/jackyliu1999/Notes-to-Text-Converter</a></b><br />\r\n        Notes to Text Converter is a program that takes handwritten notes and converts them into text. The program aims to give students the option to be able to take handwritten notes in class and have the ability to transfer them to their computer at a later time. Notes to Text Converter\r\n incorporates optical character recognition tool, Python-tesseract also known as pytesseract for the conversion functionality. Tkinter was utilized in order to provide a user-friendly interface.\r\n        <br /><b>Programming Languages:</b><br />\r\n                        <li>Python</li>\r\n                        <b>Libraries Imported:</b><br />\r\n                        <li>pytesseract </li>\r\n                        <li>Tkinter </li>\r\n                        <li>PIL </li>\r\n                        <b>How to use:</b><br />\r\n                        <li>1. Take a picture of your handwritten notes</li>\r\n                        <li>2. Open command prompt and change directory to folder containing the program</li>\r\n                        <li>3. Type \"python imgToText.py\"</li>\r\n                        <li>4. Click Browse File</li>\r\n                        <img class=\"img-fluid\" src={NotesToText1} alt=\"\" />\r\n                        <li>5. Choose image containing handwritten notes</li>\r\n                        <li>6. Choose a name for the new file containing the converted notes</li>\r\n                        <img class=\"img-fluid\" src={NotesToText2} alt=\"\" />\r\n                        <li>7. File containing the converted notes will be located in the same directory as the program</li>\r\n                    </Modal.Body>\r\n                    <Modal.Footer>\r\n                        <Button variant=\"secondary\" onClick={handleshow2Close}>\r\n                            Close\r\n          </Button>\r\n                    </Modal.Footer>\r\n                </Modal>\r\n\r\n                <Modal size=\"lg\" show={show3} onHide={handleshow3Close}>\r\n                    <Modal.Header closeButton>\r\n                        <Modal.Title>COVID19 Stats Tracker - BOTHACKS</Modal.Title>\r\n                    </Modal.Header>\r\n                    <Modal.Body>\r\n                        <b>GitHub: <a href=\"https://github.com/jackyliu1999/COVID19-Stats-Tracker\" >github.com/jackyliu1999/COVID19-Stats-Tracker</a></b><br />\r\n                        <b>Collaborated with:</b> <a href=\"https://github.com/jacky-h-nguyen\" >Jacky Nguyen</a>, <a href=\"https://github.com/ansonwong250\" >Anson Wong</a><br />\r\n                        <b>Inspiration:</b><br />\r\n        COVID-19 is a worldwide pandemic that was first identified in late 2019 in Wuhan, China. As of August 2020, more than 20 million cases resulting in over 800,000 deaths have been documented worldwide. Information regarding the coronavirus is scattered and countless individuals have found it exceedingly difficult to scavenge for information while balancing their readjusted life due to the pandemic. COVID19 Stats Tracker acts as a haven of live information regarding the virus, incorporating various pandemic-related APIs as well as voice activated commands.\r\n        <br /> <b>What it does:</b><br />\r\n        COVID19 Stats Tracker incorporates APIs that draw live data including total cases, total recovered and total deaths in order to inform the user of the severity and numbers of the COVID-19 pandemic. Furthermore, the user is able to filter results in accordance to their own country. COVID19 Stats Tracker also features commands that links the user to pandemic-related resources. Due to the fact that social media and the news are ingrained into the lives of our society, COVID19 Stats Tracker displays the most recent news articles and Reddit posts regarding COVID-19. Lastly, all of commands are activated via voice recognition, allowing easy access for each and every individual.\r\n        <img class=\"img-fluid\" src={cverseCommands.PNG} alt=\"\" />\r\n                        <br /> <b>How it was built:</b><br />\r\n          COVID19 Stats Tracker was built using Python incorporating the libraries: requests, Tkinter, datetime, webbrowser, newsapi, speech_recognition and pyttsx3. The requests module was utilized in order to web scrape data for live stats of the pandemic. Datetime was used to display the current time while the webbrowser library was used to open links to COVID-19 resources. The newsapi library was used to fetch the top pandemic-related news articles. Lastly, in conjunction with all the commands, speech_recognition allows the user to activate commands via voice while pyttsx3 reads out prompts.\r\n        <br /> <b>Demo: </b> <br />\r\n                        <img class=\"img-fluid\" src={cversestatsCanada} alt=\"\" />\r\n                        <img class=\"img-fluid\" src={cverseReddit} alt=\"\" />\r\n                        <img class=\"img-fluid\" src={cverseNews} alt=\"\" />\r\n                    </Modal.Body>\r\n                    <Modal.Footer>\r\n                        <Button variant=\"secondary\" onClick={handleshow3Close}>\r\n                            Close\r\n          </Button>\r\n                    </Modal.Footer>\r\n                </Modal>\r\n\r\n                <Modal size=\"lg\" show={show7} onHide={handleshow7Close}>\r\n                    <Modal.Header closeButton>\r\n                        <Modal.Title>Desktop Cleaner</Modal.Title>\r\n                    </Modal.Header>\r\n                    <Modal.Body><b>GitHub: <a href=\"https://github.com/jackyliu1999/Desktop-Cleaner\" >github.com/jackyliu1999/Desktop-Cleaner</a></b><br />\r\n                        <b>Functionality:</b><br />\r\n        Desktop cleaner is a Python-based automation script that sorts folders based on file type (images, documents, spreadsheets, installers, music, videos) into a user inputted directory.\r\n        <br /><b>Libraries Imported: </b><br />\r\n                        <li>os</li>\r\n                        <li>sys</li>\r\n                        <li>shutil</li>\r\n                        <br /><b>Demo: </b><br />\r\n                        <img class=\"img-fluid\" src={desktopCleaner2} alt=\"\" /><br />\r\n                        <li>Input file type to sort</li>\r\n                        <li>Input Starting Directory</li>\r\n                        <li>Input Destination Directory</li>\r\n                        <li>Desktop Cleaner then moves all files of inputted type into the destination directory and creates a new folder to store thecollection of files</li>\r\n                    </Modal.Body>\r\n                    <Modal.Footer>\r\n                        <Button variant=\"secondary\" onClick={handleshow7Close}>\r\n                            Close\r\n          </Button>\r\n                    </Modal.Footer>\r\n                </Modal>\r\n\r\n                <Modal size=\"lg\" show={show8} onHide={handleshow8Close}>\r\n                    <Modal.Header closeButton>\r\n                        <Modal.Title>Bitcoin Price Notifier</Modal.Title>\r\n                    </Modal.Header>\r\n                    <Modal.Body><b>GitHub: <a href=\"https://github.com/jackyliu1999/Bitcoin-Price-Notifier\" >github.com/jackyliu1999/Bitcoin-Price-Notifier</a></b><br />\r\n                        <b>Functionality:</b><br />\r\n        Notifies users of Bitcoin price fluctuation by extracting the live price of Bitcoin from Yahoo Finance. Allows users to set a benchmark and once the price hits the designated benchmark, verbally notifies user.\r\n        <br /><b>Libraries Imported: </b><br />\r\n                        <li>Selenium</li>\r\n                        <li>pyttsx3</li>\r\n                        <br /><b>Demo: </b><br />\r\n                        <img class=\"img-fluid\" src={BitcoinPrice1} alt=\"\" /><br />\r\n        Users are able to input a pricing benchmark and whether to be notified once price is higher or lower than the designated benchmark. Users are also able to display current prices to the terminal.\r\n        <img class=\"img-fluid\" src={BitcoinPrice2} alt=\"\" /><br />\r\n        Once benchmark is hit, notifies the user verbally using the pyttsx3 library.\r\n        </Modal.Body>\r\n                    <Modal.Footer>\r\n                        <Button variant=\"secondary\" onClick={handleshow8Close}>\r\n                            Close\r\n          </Button>\r\n                    </Modal.Footer>\r\n                </Modal>\r\n\r\n                <Modal size=\"lg\" show={show9} onHide={handleshow9Close}>\r\n                    <Modal.Header closeButton>\r\n                        <Modal.Title>ChatJS</Modal.Title>\r\n                    </Modal.Header>\r\n                    <Modal.Body>\r\n                        <b>GitHub: <a href=\"https://github.com/jackyliu1999/ChatJS\" >github.com/jackyliu1999/ChatJS</a></b><br />\r\n                        <b>Video Demo: </b><br />\r\n                        <center><iframe width=\"700\" height=\"500\"\r\n                            src=\"https://www.youtube.com/embed/26YkidHsaPo\">\r\n                        </iframe></center>\r\n                        <b>Frontend Dependencies: </b><br />\r\n                        <li>mobx</li>\r\n                        <li>mobx-react</li>\r\n                        <li>query-string</li>\r\n                        <li>react-emoji</li>\r\n                        <li>react-router-dom</li>\r\n                        <li>react-scroll-to-bottom</li>\r\n                        <li>socket.io-client</li>\r\n                        <b>Backend Login/Registration Server Dependencies: </b><br />\r\n                        <li>bcrypt</li>\r\n                        <li>express</li>\r\n                        <li>express-mysql-session</li>\r\n                        <li>express-session</li>\r\n                        <li>mysql</li>\r\n                        <b>Backend Chat Server Dependencies: </b><br />\r\n                        <li>cors</li>\r\n                        <li>express</li>\r\n                        <li>nodemon</li>\r\n                        <li>socket.io</li>\r\n                        <b>How it was built: </b><br />\r\n          The Frontend was developed using ReactJS. The backend was developed in JavaScript and databases storing user information are managed via MySQL. The server is hosted locally using Apache. Passwords are encrypted using bcrypt to ensure the safety of users. The backend for the chat server featuring communication between users was implemented using Socket.IO and nodemon.\r\n        </Modal.Body>\r\n                    <Modal.Footer>\r\n                        <Button variant=\"secondary\" onClick={handleshow9Close}>\r\n                            Close\r\n          </Button>\r\n                    </Modal.Footer>\r\n                </Modal>\r\n\r\n\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Archive;","D:\\JL\\Programming\\React\\Portfolio v2\\jackysportfolio\\src\\components\\Header.js",["62","63","64","65"],"D:\\JL\\Programming\\React\\Portfolio v2\\jackysportfolio\\src\\components\\Skills.js",["66","67","68","69","70","71","72","73","74"],"D:\\JL\\Programming\\React\\Portfolio v2\\jackysportfolio\\src\\components\\Resume.js",["75"],"import React from \"react\";\r\nimport './Resume.css';\r\n\r\nconst Resume = () => {\r\n    return (\r\n        <div className=\"\">\r\n            <br />\r\n            <br />\r\n            <div className='resume'>\r\n                <br /><br />\r\n                <h2 id=\"resume\" style={{ textAlign: \"center\" }}><b>Resume</b></h2>\r\n                <section id=\"resume\" class=\"resume\">\r\n                    <div class=\"container\">\r\n\r\n                        <div class=\"row\">\r\n                            <div class=\"col-lg-6\">\r\n                                <h3 class=\"resume-title\">Education</h3>\r\n                                <div class=\"resume-item\">\r\n                                    <h4>Ontario Secondary School Diploma\t</h4>\r\n                                    <h5>September 2013 to June 2017</h5>\r\n                                </div>\r\n                                <div class=\"resume-item\">\r\n                                    <h4>Bachelor of Science in Computer Science</h4>\r\n                                    <h5>September 2017 to April 2021</h5>\r\n                                    <p><em>Western University, London, Ontario</em></p>\r\n                                </div>\r\n                                <h3 class=\"resume-title\">Achievements</h3>\r\n                                <div class=\"resume-item\">\r\n                                    <h4>Hack for the People Winner</h4>\r\n                                    <h5>August 2020</h5>\r\n                                    <li>Led a team of two other developers to create a security based program that mitigates damage caused by laptop theft for Hack for the People</li>\r\n                                    <li>Out of over 700 participants, won the category for “Best Digital Privacy Hack”</li>\r\n                                </div>\r\n                                <div class=\"resume-item\">\r\n                                    <h4>Ontario Scholar</h4>\r\n                                    <h5>June 2017</h5>\r\n                                    <p>\r\n                                        <ul>\r\n                                            <li>Awarded to high school students who achieved an average of 80% or greater in their graduating year</li>\r\n                                        </ul>\r\n                                    </p>\r\n                                </div>\r\n                            </div>\r\n\r\n                            <div class=\"col-lg-6\">\r\n                                <h3 class=\"resume-title\">Skills</h3>\r\n                                <div class=\"resume-item\">\r\n                                    <h4>Frameworks and Libraries</h4>\r\n                                    <p>\r\n                                        <ul>\r\n                                            <li><b>Python:</b> Django, Keras, NumPy, OpenPyXL, PIL, Selenium, SpeechRecognition, TensorFlow, Tkinter, pandas, pynput, pytesseract, pyttsx3, ibm_watson, requests, scikit-learn</li>\r\n                                            <li><b>JavaScript: </b>React Native, React, Bootstrap, Django, Axios, bcrypt, express, socket.io, react-scroll-to-bottom, react-emoji</li>\r\n                                            <li><b>Java: </b>JDA, Orianna</li>\r\n                                        </ul>\r\n                                    </p>\r\n                                </div>\r\n                                <div class=\"resume-item\">\r\n                                    <h4>Software, IDEs and Tools</h4>\r\n                                    <p>\r\n                                        <ul>\r\n                                            <li><b>Photo and Video Editing:</b> Adobe Photoshop, Camtasia Studio</li>\r\n                                            <li><b>Programming Software and IDEs:</b> Eclipse, Git, PyCharm, Anaconda, Android Studio, Node.js, Code::Blocks</li>\r\n                                            <li><b>Microsoft:</b> Microsoft Excel, Microsoft PowerPoint, Microsoft Word</li>\r\n                                            <li><b>Databases and Servers:</b> MySQL, Apache, phpMyAdmin, XAMPP, MongoDB, MongoDB Compass </li>\r\n                                        </ul>\r\n                                    </p>\r\n                                </div>\r\n                                <div class=\"resume-item\">\r\n                                    <h4>Languages</h4>\r\n                                    <p>\r\n                                        <ul>\r\n                                            <li>English</li>\r\n                                            <li>Chinese (Cantonese)</li>\r\n                                        </ul>\r\n                                    </p>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </section>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Resume;",{"ruleId":"76","replacedBy":"77"},{"ruleId":"78","replacedBy":"79"},{"ruleId":"80","severity":1,"message":"81","line":33,"column":10,"nodeType":"82","messageId":"83","endLine":33,"endColumn":13},{"ruleId":"80","severity":1,"message":"84","line":33,"column":15,"nodeType":"82","messageId":"83","endLine":33,"endColumn":21},{"ruleId":"80","severity":1,"message":"85","line":33,"column":23,"nodeType":"82","messageId":"83","endLine":33,"endColumn":27},{"ruleId":"80","severity":1,"message":"86","line":33,"column":29,"nodeType":"82","messageId":"83","endLine":33,"endColumn":40},{"ruleId":"80","severity":1,"message":"87","line":46,"column":11,"nodeType":"82","messageId":"83","endLine":46,"endColumn":26},{"ruleId":"80","severity":1,"message":"88","line":50,"column":11,"nodeType":"82","messageId":"83","endLine":50,"endColumn":26},{"ruleId":"80","severity":1,"message":"89","line":60,"column":12,"nodeType":"82","messageId":"83","endLine":60,"endColumn":17},{"ruleId":"80","severity":1,"message":"90","line":61,"column":11,"nodeType":"82","messageId":"83","endLine":61,"endColumn":27},{"ruleId":"80","severity":1,"message":"91","line":62,"column":11,"nodeType":"82","messageId":"83","endLine":62,"endColumn":26},{"ruleId":"80","severity":1,"message":"92","line":66,"column":11,"nodeType":"82","messageId":"83","endLine":66,"endColumn":26},{"ruleId":"80","severity":1,"message":"93","line":70,"column":11,"nodeType":"82","messageId":"83","endLine":70,"endColumn":26},{"ruleId":"94","severity":1,"message":"95","line":96,"column":87,"nodeType":"96","endLine":96,"endColumn":151},{"ruleId":"94","severity":1,"message":"95","line":102,"column":88,"nodeType":"96","endLine":102,"endColumn":153},{"ruleId":"97","severity":1,"message":"98","line":108,"column":45,"nodeType":"96","endLine":108,"endColumn":56},{"ruleId":"94","severity":1,"message":"95","line":108,"column":111,"nodeType":"96","endLine":108,"endColumn":178},{"ruleId":"97","severity":1,"message":"98","line":116,"column":45,"nodeType":"96","endLine":116,"endColumn":56},{"ruleId":"94","severity":1,"message":"95","line":116,"column":77,"nodeType":"96","endLine":116,"endColumn":144},{"ruleId":"97","severity":1,"message":"98","line":122,"column":45,"nodeType":"96","endLine":122,"endColumn":56},{"ruleId":"94","severity":1,"message":"95","line":122,"column":78,"nodeType":"96","endLine":122,"endColumn":143},{"ruleId":"99","severity":1,"message":"100","line":383,"column":33,"nodeType":"96","endLine":384,"endColumn":77},{"ruleId":"99","severity":1,"message":"100","line":465,"column":33,"nodeType":"96","endLine":466,"endColumn":77},{"ruleId":"99","severity":1,"message":"100","line":494,"column":33,"nodeType":"96","endLine":495,"endColumn":77},{"ruleId":"99","severity":1,"message":"100","line":213,"column":33,"nodeType":"96","endLine":214,"endColumn":77},{"ruleId":"80","severity":1,"message":"81","line":2,"column":18,"nodeType":"82","messageId":"83","endLine":2,"endColumn":21},{"ruleId":"80","severity":1,"message":"85","line":2,"column":23,"nodeType":"82","messageId":"83","endLine":2,"endColumn":27},{"ruleId":"80","severity":1,"message":"86","line":2,"column":29,"nodeType":"82","messageId":"83","endLine":2,"endColumn":40},{"ruleId":"80","severity":1,"message":"101","line":2,"column":42,"nodeType":"82","messageId":"83","endLine":2,"endColumn":48},{"ruleId":"80","severity":1,"message":"81","line":2,"column":10,"nodeType":"82","messageId":"83","endLine":2,"endColumn":13},{"ruleId":"80","severity":1,"message":"101","line":2,"column":15,"nodeType":"82","messageId":"83","endLine":2,"endColumn":21},{"ruleId":"80","severity":1,"message":"84","line":2,"column":23,"nodeType":"82","messageId":"83","endLine":2,"endColumn":29},{"ruleId":"80","severity":1,"message":"85","line":2,"column":31,"nodeType":"82","messageId":"83","endLine":2,"endColumn":35},{"ruleId":"80","severity":1,"message":"86","line":2,"column":37,"nodeType":"82","messageId":"83","endLine":2,"endColumn":48},{"ruleId":"80","severity":1,"message":"102","line":2,"column":50,"nodeType":"82","messageId":"83","endLine":2,"endColumn":54},{"ruleId":"80","severity":1,"message":"103","line":2,"column":56,"nodeType":"82","messageId":"83","endLine":2,"endColumn":65},{"ruleId":"80","severity":1,"message":"104","line":2,"column":67,"nodeType":"82","messageId":"83","endLine":2,"endColumn":70},{"ruleId":"80","severity":1,"message":"105","line":2,"column":72,"nodeType":"82","messageId":"83","endLine":2,"endColumn":75},{"ruleId":"106","severity":1,"message":"107","line":52,"column":52,"nodeType":"108","messageId":"109","endLine":52,"endColumn":64},"no-native-reassign",["110"],"no-negated-in-lhs",["111"],"no-unused-vars","'Nav' is defined but never used.","Identifier","unusedVar","'Navbar' is defined but never used.","'Form' is defined but never used.","'FormControl' is defined but never used.","'handleshow2Show' is assigned a value but never used.","'handleshow3Show' is assigned a value but never used.","'show6' is assigned a value but never used.","'handleshow6Close' is assigned a value but never used.","'handleshow6Show' is assigned a value but never used.","'handleshow7Show' is assigned a value but never used.","'handleshow8Show' is assigned a value but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","jsx-a11y/iframe-has-title","<iframe> elements must have a unique title property.","'Button' is defined but never used.","'Card' is defined but never used.","'Container' is defined but never used.","'Row' is defined but never used.","'Col' is defined but never used.","no-script-url","Script URL is a form of eval.","Literal","unexpectedScriptURL","no-global-assign","no-unsafe-negation"]